# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Ui_0_0_2.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from os import getcwd

from database import Database

DB_PATH = f"{getcwd()}\\database.db"

database = Database()


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        # # query notes to populate into GUI
        # self.notes_to_show = self.get_notes()
        # print(self.notes_to_show)
        # self.length_of_notes = len(self.notes_to_show) -1
        self.get_notes()
        self.update = False

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(982, 598)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.note_name = QtWidgets.QLineEdit(self.centralwidget)
        self.note_name.setGeometry(QtCore.QRect(90, 10, 371, 21))
        self.note_name.setObjectName("note_name")
        self.label_note_name = QtWidgets.QLabel(self.centralwidget)
        self.label_note_name.setGeometry(QtCore.QRect(10, 10, 71, 21))
        self.label_note_name.setObjectName("label_note_name")
        self.label_contents = QtWidgets.QLabel(self.centralwidget)
        self.label_contents.setGeometry(QtCore.QRect(10, 30, 81, 31))
        self.label_contents.setObjectName("label_contents")
        self.pushButton_save_note = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_save_note.setGeometry(QtCore.QRect(470, 10, 91, 41))
        self.pushButton_save_note.setObjectName("pushButton_save_note")
        self.pushButton_new_note = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_new_note.setGeometry(QtCore.QRect(560, 10, 91, 41))
        self.pushButton_new_note.setObjectName("pushButton_new_note")
        self.note_contents = QtWidgets.QTextEdit(self.centralwidget)
        self.note_contents.setGeometry(QtCore.QRect(0, 60, 801, 491))
        self.note_contents.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.note_contents.setObjectName("note_contents")
        self.recent_note_1 = QtWidgets.QPushButton(self.centralwidget)
        self.recent_note_1.setGeometry(QtCore.QRect(800, 60, 181, 71))
        self.recent_note_1.setObjectName("recent_note_1")
        self.recent_note_2 = QtWidgets.QPushButton(self.centralwidget)
        self.recent_note_2.setGeometry(QtCore.QRect(800, 130, 181, 71))
        self.recent_note_2.setObjectName("recent_note_2")
        self.recent_note_3 = QtWidgets.QPushButton(self.centralwidget)
        self.recent_note_3.setGeometry(QtCore.QRect(800, 200, 181, 71))
        self.recent_note_3.setObjectName("recent_note_3")
        self.recent_note_4 = QtWidgets.QPushButton(self.centralwidget)
        self.recent_note_4.setGeometry(QtCore.QRect(800, 270, 181, 71))
        self.recent_note_4.setObjectName("recent_note_4")
        self.recent_note_5 = QtWidgets.QPushButton(self.centralwidget)
        self.recent_note_5.setGeometry(QtCore.QRect(800, 340, 181, 71))
        self.recent_note_5.setObjectName("recent_note_5")
        self.recent_note_6 = QtWidgets.QPushButton(self.centralwidget)
        self.recent_note_6.setGeometry(QtCore.QRect(800, 410, 181, 71))
        self.recent_note_6.setObjectName("recent_note_6")
        self.recent_note_7 = QtWidgets.QPushButton(self.centralwidget)
        self.recent_note_7.setGeometry(QtCore.QRect(800, 480, 181, 71))
        self.recent_note_7.setObjectName("recent_note_7")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 982, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Button actions.
        # Action for save/update button.
        self.pushButton_save_note.clicked.connect(self.save_button)
        # Action for new note button.
        self.pushButton_new_note.clicked.connect(self.new_note)
        # Action for the buttons on the right hand column of text.
        self.recent_note_1.clicked.connect(self.recall_button_1)
        self.recent_note_2.clicked.connect(self.recall_button_2)
        self.recent_note_3.clicked.connect(self.recall_button_3)
        self.recent_note_4.clicked.connect(self.recall_button_4)
        self.recent_note_5.clicked.connect(self.recall_button_5)
        self.recent_note_6.clicked.connect(self.recall_button_6)
        self.recent_note_7.clicked.connect(self.recall_button_7)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_note_name.setText(_translate("MainWindow", "Name:"))
        self.label_contents.setText(_translate("MainWindow", "Contents:"))
        if not self.update:
            self.pushButton_save_note.setText(_translate("MainWindow", "Save Note"))
        else:
            self.pushButton_save_note.setText(_translate("MainWindow", "Update Note"))
        self.pushButton_new_note.setText(_translate("MainWindow", "New Note"))
        self.recent_note_1.setText(_translate("MainWindow", self.db_notes[self.length_of_notes][1]))
        self.recent_note_2.setText(_translate("MainWindow", self.db_notes[self.length_of_notes - 1][1]))
        self.recent_note_3.setText(_translate("MainWindow", self.db_notes[self.length_of_notes - 2][1]))
        self.recent_note_4.setText(_translate("MainWindow", self.db_notes[self.length_of_notes - 3][1]))
        self.recent_note_5.setText(_translate("MainWindow", self.db_notes[self.length_of_notes - 4][1]))
        self.recent_note_6.setText(_translate("MainWindow", self.db_notes[self.length_of_notes - 5][1]))
        self.recent_note_7.setText(_translate("MainWindow", self.db_notes[self.length_of_notes - 6][1]))


    def save_button(self):
        print("save_button() called")
        if self.pushButton_save_note.text() == "Save Note":
            new_note_name = self.note_name.text()
            # print(new_note_name)
            new_note_contents = self.note_contents.toPlainText()
            # print(new_note_contents)
            note_to_save = (new_note_name, new_note_contents)
            # print(note_to_save)
            conn = database.create_connection(DB_PATH)
            database.add_note(conn, note_to_save)
            self.get_notes()
            self.retranslateUi(MainWindow)
        else:
            print("Updating note.")
            existing_note_id = self.note_id
            existing_note_name = self.note_name.text()
            existing_note_contents = self.note_contents.toPlainText()
            note_to_edit = (existing_note_name, existing_note_contents, existing_note_id)
            print(note_to_edit)
            conn = database.create_connection(DB_PATH)
            database.edit_note(conn, note_to_edit)
            self.update = False
            self.get_notes()
            self.retranslateUi(MainWindow)

    def new_note(self):
        self.update = False
        self.note_name.setText("New Note")
        self.note_contents.setText("")
        self.retranslateUi(MainWindow)

    def get_notes(self):
        conn = database.create_connection(DB_PATH)
        self.db_notes = database.get_user_notes(conn)
        # query notes to populate into GUI
        # print(self.db_notes)
        self.length_of_notes = len(self.db_notes) - 1
        # return self.db_notes

    def recall_button_1(self):
        self.update = True
        print(self.db_notes[self.length_of_notes])
        self.note_name.setText(self.db_notes[self.length_of_notes][1])
        self.note_contents.setText(self.db_notes[self.length_of_notes][2])
        self.note_id = self.db_notes[self.length_of_notes][0]
        self.retranslateUi(MainWindow)

    def recall_button_2(self):
        self.update = True
        print(self.db_notes[self.length_of_notes])
        self.note_name.setText(self.db_notes[self.length_of_notes - 1][1])
        self.note_contents.setText(self.db_notes[self.length_of_notes - 1][2])
        self.note_id = self.db_notes[self.length_of_notes - 1][0]
        self.retranslateUi(MainWindow)

    def recall_button_3(self):
        self.update = True
        self.note_name.setText(self.db_notes[self.length_of_notes - 2][1])
        self.note_contents.setText(self.db_notes[self.length_of_notes - 2][2])
        self.note_id = self.db_notes[self.length_of_notes - 2][0]
        self.retranslateUi(MainWindow)

    def recall_button_4(self):
        self.update = True
        self.note_name.setText(self.db_notes[self.length_of_notes - 3][1])
        self.note_contents.setText(self.db_notes[self.length_of_notes- 3][2])
        self.note_id = self.db_notes[self.length_of_notes - 3][0]
        self.retranslateUi(MainWindow)

    def recall_button_5(self):
        self.update = True
        self.note_name.setText(self.db_notes[self.length_of_notes - 4][1])
        self.note_contents.setText(self.db_notes[self.length_of_notes - 4][2])
        self.note_id = self.db_notes[self.length_of_notes - 4][0]
        self.retranslateUi(MainWindow)

    def recall_button_6(self):
        self.update = True
        self.note_name.setText(self.db_notes[self.length_of_notes - 5][1])
        self.note_contents.setText(self.db_notes[self.length_of_notes - 5][2])
        self.note_id = self.db_notes[self.length_of_notes - 5][0]
        self.retranslateUi(MainWindow)

    def recall_button_7(self):
        self.update = True
        self.note_name.setText(self.db_notes[self.length_of_notes - 6][1])
        self.note_contents.setText(self.db_notes[self.length_of_notes - 6][2])
        self.note_id = self.db_notes[self.length_of_notes - 6][0]
        self.retranslateUi(MainWindow)

if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
